<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<HTML DIR="LTR" xmlns:msxsl="urn:schemas-microsoft-com:xslt" xmlns:myScript="http://iisue" xmlns:MSHelp="http://msdn.microsoft.com/mshelp">
<HEAD>
<META NAME="DESCRIPTION" VALUE="Reference information about the built-in objects available to ASP applications, like the Request and Response objects.">
<META HTTP-EQUIV="Content-Type" Content="text/html; charset=Windows-1252">
<META NAME="MS.LOCALE" CONTENT="EN-US">
		<script SRC="scripts/langref.js"></script>
		<script SRC="scripts/linkcss.js"></script>
<title>Request.ClientCertificate Collection</title><XML><MSHelp:TOCTitle Title="Request.ClientCertificate Collection"/>
<MSHelp:RLTitle Title="Request.ClientCertificate Collection (IIS)"/>
<MSHelp:Attr Name="DocSet" Value="IIS SDK"/>
<MSHelp:Attr Name="DocSet" Value="PSDK"/>
<MSHelp:Attr Name="Locale" Value="kbEnglish"/>
<MSHelp:Attr Name="Technology" Value="IIS"/>
<MSHelp:Attr Name="TechnologyVers" Value="kbIIS" />
<MSHelp:Attr Name="Technology" Value="ASP"/>
<MSHelp:Attr Name="TechnologyVers" Value="kbASP" />

<MSHelp:Attr Name="TopicType" Value="kbSyntax"/>
<MSHelp:Keyword Index="A" Term="Request.ClientCertificate_Collection"/>
<MSHelp:Keyword Index="A" Term="_IIS6_Request.ClientCertificate_Collection"/>
</XML></HEAD>

<body topmargin=0 id="bodyID">
<a name="top"></a>			<TABLE CLASS="buttonbarshade" cellspacing="0" cellpadding="0">
				<TR>
					<TD></TD>
				</TR>
			</TABLE>
		<TABLE class="buttonbartable" cellspacing="0" cellpadding="0">
			<TR id="hdr">
				<TD runninghead="">&nbsp;</TD>
			</TR>
		</TABLE>

        <h1>Request.ClientCertificate Collection</h1>
<p>The <b>ClientCertificate</b> collection holds fields of keys and
values from a security certificate that the client browser passes
to the Web server. These fields are specified in the X.509 version
3 standard for public key certificates. Because X.509 is not an
official standard, you may notice differences among certificates
obtained from certification authorities. For more information, see
the <i>X509 Certificate</i> article on the <a href="http://go.microsoft.com/fwlink/?LinkId=1761" target="_New">World Wide Web
Consortium</a> Web site.</p>
<p>In order to populate the fields of the <b>ClientCertificate</b>
collection, both the Web server and the client browser must support
the SSL3.0/PCT1.0 protocol. The Web site must have secure sockets
layer (SSL) enabled and request client certificates. After SSL is
enabled, the URL of the Web site will start with "https://" instead
of "http://". The client browser must be capable of sending a
certificate. If no certificate is sent, the <b>
ClientCertificate</b> collection returns EMPTY.</p>You must configure your Web server to
request client certificates.<p>To read the values in each field of the <b>ClientCertificate</b>
collection, pass in a key name and optional subfield name.</p>
<p>As a security precaution, always encode certificate data (or any
request data) before using it. A general method of encoding data is
to use <a href="ref_vbom_seromhtenc.htm">Server.HTMLEncode</a>. Another
method is to write a short function that tests request data for
invalid characters. More information can be found by reading
chapter 12 of <a href="http://go.microsoft.com/fwlink/?LinkId=6932" target="_New">Writing Secure Code</a>, and using <a href="ASPSecurityChecklist.htm">Checklist: ASP Security</a> when you
create your ASP applications.</p>
<h4>Syntax</h4>
<p><b>Request.ClientCertificate(</b> <i>
Key</i>[<i>SubField</i>] <b>)</b></p>
<h4>Parameters</h4>
<dl>
<dt><i>Key</i></dt>
<dd>Specifies the name of the certification field to retrieve. A
client certificate consists of the following fields. 

<table class="UAweb" width="100%">
<tr>
<th><b>Value</b></th>
<th><b>Meaning</b></th>
</tr>
<tr>
<td width="50%">Certificate</td>
<td width="50%">A string containing the binary stream of the entire certificate
content in ASN.1 format. This is useful to discover if special <i>
SubFields</i> are present that are not listed below.</td>
</tr>
<tr>
<td width="50%">Flags</td>
<td width="50%">A set of flags that provides additional client certificate
information. If <i>Flags</i> is set to 1, a client certificate is
present. If <i>Flags</i> is set to 2, the last certificate in this
chain is from an unknown issuer.</td>
</tr>
<tr>
<td width="50%">Issuer</td>
<td width="50%">A string that contains a list of subfield values containing
information about the issuer of the certificate. If this value is
specified without a <i>SubField</i>, the <b>ClientCertificate</b>
collection returns a comma-separated list of subfields. For
example, C=US, O=Verisign, and so on.</td>
</tr>
<tr>
<td width="50%">SerialNumber</td>
<td width="50%">A string that contains the certification serial number as an
ASCII representation of hexadecimal bytes separated by hyphens (-).
For example, 04-67-F3-02.</td>
</tr>
<tr>
<td width="50%">Subject</td>
<td width="50%">A string that contains a list of subfield values. The subfield
values contain information about the subject of the certificate. If
this value is specified without a <i>SubField</i>, the <b>
ClientCertificate</b> collection returns a comma-separated list of
subfields. For example, C=US, O=Msft, and so on.</td>
</tr>
<tr>
<td width="50%">ValidFrom</td>
<td width="50%">A date specifying when the certificate becomes valid. This date
follows VBScript format and varies with international settings. For
example, in the United States, 9/26/96 11:59:59 <span>P.M.</span>. The year value is displayed as a
four-digit number.</td>
</tr>
<tr>
<td width="50%">ValidUntil</td>
<td width="50%">A date specifying when the certificate expires. The year value
is displayed as a four-digit number.</td>
</tr>
</table><br><br></dd>
<dt><i>SubField</i></dt>
<dd>An optional parameter you can use to a retrieve an individual
field in either the <b>Subject</b> or <b>Issuer</b> keys. This
parameter is added to the <i>Key</i> parameter as a suffix. For
example, IssuerO or SubjectCN. The following table lists some
common <i>SubField</i> values. 

<table class="UAweb" width="100%">
<tr>
<th><b>Value</b></th>
<th><b>Meaning</b></th>
</tr>
<tr>
<td width="50%">C</td>
<td width="50%">Specifies the name of the country/region of origin.</td>
</tr>
<tr>
<td width="50%">CN</td>
<td width="50%">Specifies the common name of the user. (This subfield is only
used with the <b>Subject</b> key.)</td>
</tr>
<tr>
<td width="50%">GN</td>
<td width="50%">Specifies a given name.</td>
</tr>
<tr>
<td width="50%">I</td>
<td width="50%">Specifies a set of initials.</td>
</tr>
<tr>
<td width="50%">L</td>
<td width="50%">Specifies a locality.</td>
</tr>
<tr>
<td width="50%">O</td>
<td width="50%">Specifies the company or organization name.</td>
</tr>
<tr>
<td width="50%">OU</td>
<td width="50%">Specifies the name of the organizational unit.</td>
</tr>
<tr>
<td width="50%">S</td>
<td width="50%">Specifies a state or province.</td>
</tr>
<tr>
<td width="50%">T</td>
<td width="50%">Specifies the title of the person or organization.</td>
</tr>
</table>
<p><i>SubField</i> values other than those listed in the preceding
table can be identified by their ASN.1 object identifier (OID). The
format of the Object Identifier is a list of numbers separated by a
period (.). A list of Object Identifiers for your certificate can
be obtained from the authority that issued your certificate.</p>
</dd>
</dl>
<h4>Example</h4>
<p>You can iterate through the keys of the <b>ClientCertificate</b>
collection, as shown in the following example.</p>
<pre><code>&lt;%
  For Each strKey in Request.ClientCertificate
    Response.Write strkey &amp; " = " &amp; Request.ClientCertificate(strkey) &amp; "&lt;BR&gt;"
  Next
%&gt;
</code></pre>
<p>The following example retrieves the common name of the company
that issued the client certificate.</p>
<pre><code>&lt;%= Request.ClientCertificate("IssuerCN") %&gt;</code></pre>
<p>The following example displays the expiration date of the client
certificate.</p>
<pre><code>This certification will expire on 
&lt;%= Request.ClientCertificate("ValidUntil") %&gt;
</code></pre>
<p>The following example uses the <b>Flags</b> key to test whether
the issuer of the certificate is known.</p>
<pre><code>&lt;%
  Const ceCertPresent = 1
  Const ceUnrecognizedIssuer = 2
  If Request.ClientCertificate("Flags") = ceUnrecognizedIssuer Then
    Response.Write "Unrecognized issuer"
  End If
%&gt;
</code></pre>
<p>The following example displays all the fields of a client
certificate.</p>
<pre><code>Issuer: &lt;%=Request.ClientCertificate("Issuer")%&gt;&lt;br&gt;
Subject: &lt;%=Request.ClientCertificate("Subject")%&gt;&lt;br&gt;

&lt;% cer=Request.ClientCertificate("Certificate") %&gt;
Certificate Raw Data: &lt;%=cer%&gt;&lt;br&gt;
Certificate length: &lt;%=len(cer)%&gt;&lt;br&gt;
Certificate Hex Data:
&lt;% For x=1 To 100 %&gt;
  &lt;%=hex(asc(mid(cer,x,1)))%&gt;nbsp;
&lt;% Next %&gt;
</code></pre>
<h4><BR/>
</h4>
</body>
  </HTML>
